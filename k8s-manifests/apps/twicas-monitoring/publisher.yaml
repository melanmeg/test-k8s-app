apiVersion: apps/v1
kind: Deployment
metadata:
  name: publisher
  labels:
    app: publisher
spec:
  replicas: 3
  selector:
    matchLabels:
      app: publisher
  template:
    metadata:
      labels:
        app: publisher
    spec:
      containers:
        - name: publisher-container
          image: node:20
          ports:
            - containerPort: 3000
          command: ["node"]
          args:
            [
              "-e",
              "require('http').createServer((req, res) => res.end('Hello, Kubernetes!')).listen(3000);",
            ]
          resources:
            limits:
              memory: "512Mi"
              cpu: "250m"
            requests:
              memory: "128Mi"
              cpu: "100m"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: Exists
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - rabbitmq-cluster
          topologyKey: kubernetes.io/hostname
