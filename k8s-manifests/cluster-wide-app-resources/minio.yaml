apiVersion: v1
kind: Service
metadata:
  name: minio-lb
  namespace: tenant-1
spec:
  type: NodePort
  ports:
    - port: 9090
      targetPort: 9090
      nodePort: 30005
      protocol: TCP
  selector:
    v1.min.io/tenant: minio-tenant-1
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: minio-operator
  namespace: argocd
spec:
  project: cluster-wide-apps
  source:
    chart: operator
    repoURL: https://operator.min.io
    targetRevision: 6.0.4
    helm:
      releaseName: minio-operator
  destination:
    server: https://kubernetes.default.svc
    namespace: minio-operator
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: minio-tenant-1
  namespace: argocd
spec:
  project: cluster-wide-apps
  source:
    chart: tenant
    repoURL: https://operator.min.io
    targetRevision: 6.0.4
    helm:
      releaseName: minio-tenant-1
      values: |
        tenant:
          name: minio-tenant-1

          configuration:
            name: myminio-env-configuration
          configSecret:
            name: myminio-env-configuration
            accessKey: minio
            secretKey: minio123

          pools:
            - servers: 4
              name: pool-0
              volumesPerServer: 4
              size: 2Gi
              storageClassName: directpv-min-io

          mountPath: /export
          subPath: /data

          buckets:
            - name: k8s-loki
            - name: k8s-tempo
            - name: k8s-pyroscope

          metrics:
            enabled: false
            port: 9000
            protocol: http

          certificate:
            requestAutoCert: false

          prometheusOperator: false
  destination:
    server: https://kubernetes.default.svc
    namespace: tenant-1
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-client-job
  namespace: tenant-1
spec:
  template:
    metadata:
      labels:
        app: minio-client
    spec:
      containers:
        - name: wait-for-init
          image: busybox
          command:
            - sh
            - -c
            - |
              # Wait for MinIO to be ready
              echo "Waiting for MinIO to be ready..."
              until $(nc -zv minio.tenant-1 80) ; do
                echo "Waiting for MinIO to be ready..."
                sleep 5
              done
              echo "MinIO is ready."
        - name: minio-init
          image: minio/mc
          command:
            - sh
            - -c
            - |
              # bucket rule to add
              echo "Adding ILM rule..."
              mc alias set myminio http://minio.tenant-1 minio minio123
              mc ilm rule add myminio/k8s-loki --expire-days 90
              mc ilm rule add myminio/k8s-tempo --expire-days 90
              mc ilm rule add myminio/k8s-pyroscope --expire-days 90
              echo "ILM rule added."
          resources:
            limits:
              memory: "128Mi"
              cpu: "200m"
            requests:
              memory: "64Mi"
              cpu: "100m"
      restartPolicy: Never
