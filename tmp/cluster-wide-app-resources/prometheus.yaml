apiVersion: v1
kind: Service
metadata:
  name: prometheus-lb
  namespace: monitoring
spec:
  type: NodePort
  ports:
    - port: 9090
      targetPort: 9090
      nodePort: 30043
      protocol: TCP
  selector:
    prometheus: prometheus-kube-prometheus-prometheus
    app.kubernetes.io/name: prometheus
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
spec:
  project: cluster-wide-apps
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 62.3.1
    helm:
      releaseName: prometheus
      values: |
        defaultRules:
          create: true
          rules:
            kubeProxy: false
        service:
          portName: http-web
        grafana:
          enabled: false
        prometheusOperator:
          tls:
            enabled: false
          admissionWebhooks:
            enabled: false
        prometheus:
          prometheusSpec:
            additionalScrapeConfigs:
              - job_name: 'prometheus'
                static_configs:
                  - targets: ['192.168.11.22:9100']
              - job_name: minio-job
                metrics_path: /minio/v2/metrics/cluster
                scheme: http
                static_configs:
                - targets: ['minio.minio:9000']
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: nfs-share
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 20Gi
            resources:
              requests:
                memory: 1Gi
            securityContext:
              runAsGroup: 0
              runAsNonRoot: false
              runAsUser: 0
              fsGroup: 2000
        alertmanager:
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: nfs-share
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
            securityContext:
              runAsGroup: 0
              runAsNonRoot: false
              runAsUser: 0
              fsGroup: 2000
        kubeProxy:
          enabled: false
        kubeEtcd:
          endpoints:
            - 192.168.11.111
            - 192.168.11.112
            - 192.168.11.113
          service:
            enabled: true
            port: 2381
            targetPort: 2381
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - Replace=true
